{"version":3,"file":"translate.service.js","sourceRoot":"","sources":["../../src/translate.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DatabaseService } from 'bdt105angulardatabaseservice';\nimport { ConnexionService } from 'bdt105angularconnexionservice';\nimport { Toolbox } from 'bdt105toolbox/dist';\n\n@Injectable()\nexport class TranslateService {\n    translation: any[];\n    \n    private configuration = {\"translateTags\": true};\n    private toolbox: Toolbox = new Toolbox();\n    \n    constructor(private databaseService: DatabaseService, private connexionService: ConnexionService){\n        this.translation = this.toolbox.readFromStorage(\"translation\");\n        if (!this.translation){\n            let callback = function(){\n\n            }\n            this.loadFromDatabase(callback, callback);\n        }\n    }\n\n    public setDatabaseBaseUrl(baseUrl: string){\n        this.databaseService.configuration.baseUrl = baseUrl;\n    }\n\n    public translate(text: string): string{\n        if (this.translation){\n            for (var i = 0; i < this.translation.length; i++){\n                if (this.translation[i].name == text){\n                    return this.translation[i].label;\n                }\n            }\n        }\n        return text;\n    }\n\n    public t(text: string){\n        return this.translate(text);\n    }\n\n    private loadFromDatabase(callBackSuccess: Function, callBackFailure: Function) {\n        var conn = this.connexionService.getConnexion();\n        if (conn){\n            this.databaseService.connect(conn.currentUser.login, conn.currentUser.password);\n            var sql = \"SELECT * FROM label where user = 'everyone' and domain = 'rest' and lang = '\" + conn.currentUser.lang + \"'\";\n            this.databaseService.sql(\n                (data: any) => this.success(callBackSuccess, data), \n                (data: any) => this.failure(callBackFailure, data), sql);\n        }\n    }\n\n    private success(callBackSuccess: Function, data: any){\n        this.translation = data.json.results;\n        this.toolbox.writeToStorage(\"translation\", this.translation, false);\n        if (callBackSuccess){\n            callBackSuccess(data);\n        }\n    };\n\n    private failure (callBackFailure: Function, data: any){\n        if (callBackFailure){\n            callBackFailure(data);\n        }\n    };\n\n    public getTranslateTag (){\n        var setting = this.toolbox.readFromStorage(\"setting\");\n        var translateTags = this.configuration.translateTags;\n        if (setting && setting.translateTags){\n            translateTags = setting.translateTags;\n        }\n        return translateTags;\n    };\n\n    public refresh(callBackSuccess: Function, callBackFailure: Function){\n        this.loadFromDatabase(callBackSuccess, callBackFailure);\n    }\n    \n}"]}