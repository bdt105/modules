{"version":3,"sources":["../../src/database.service.ts"],"names":[],"mappings":"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","file":"database.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions, RequestMethod, Headers } from '@angular/http';\r\nimport { Toolbox } from 'bdt105toolbox/dist';\r\n\r\nclass DatabaseOption {\r\n    constructor( \r\n        public where?: string,\r\n        public orderby?: string,\r\n        public groupby?: string,\r\n        public limit?: string,\r\n        public offset?: string){\r\n    }\r\n}\r\n\r\n\r\nexport class DatabaseService {\r\n    constructor (private http: Http) {\r\n\r\n    }\r\n\r\n    public body: any;\r\n    public login: string;\r\n    public password: string;\r\n    public contentType = \"application/json\";\r\n\r\n    private toolbox: Toolbox = new Toolbox();\r\n    public configuration = {\r\n        \"baseUrl\": \"http://editeur.vidal.fr/demo/apidb/demonstrationEditeur\",\r\n        \"baseUrlOld\": \"http://localhost/apidb/demonstrationLocalhost\",\r\n        \"sql\": \"/sql\",\r\n        \"update\": \"/update\",\r\n        \"read\": \"/read\",\r\n        \"fresh\": \"/fresh\",\r\n        \"structure\": \"/structure\",\r\n        \"insert\": \"/insert\",\r\n        \"save\": \"/save\",\r\n        \"delete\": \"/delete\",\r\n        \"fields\": \"/fields\",\r\n        \"count\": \"/count\"\r\n    };\r\n    \r\n    private setHeaders (): Headers{\r\n        var auth = \"Basic \" + btoa(this.login + \":\" + this.password);\r\n        var headers = new Headers();\r\n        headers.append(\"Authorization\", auth);\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        return headers;\r\n    }\r\n\r\n    private manageData (callback: any, data: any){\r\n        this.toolbox.log(data);\r\n        if (data._body && (typeof data._body  == \"string\")){\r\n            if ((<string>data._body).startsWith(\"<?xml version\")){\r\n                data.json = this.toolbox.xml2json(data._body);\r\n            }else{\r\n                data.json = this.toolbox.parseJson(data._body);\r\n            }\r\n        }\r\n        callback(data);\r\n    };\r\n\r\n    private manageError (callback: any, error: any){\r\n        console.log(error);\r\n        callback(error);\r\n    };\r\n\r\n    public callPost(callbackSuccess: Function, callbackFailure: Function, url: string, body: any){\r\n        var headrs = this.setHeaders();\r\n        this.toolbox.log(url);\r\n        this.toolbox.log(body);\r\n        this.toolbox.log(JSON.stringify(body));\r\n        this.http.post(url, body, {headers: headrs}).subscribe(\r\n            (data) => this.manageData(callbackSuccess, data),\r\n            (error) => this.manageError(callbackFailure, error)\r\n        );\r\n    }\r\n\r\n    public callGet(callbackSuccess: Function, callbackFailure: Function, url: string){\r\n        var headrs = this.setHeaders();\r\n        this.toolbox.log(url);\r\n        this.http.get(url, {headers: headrs}).subscribe(\r\n            (data) => this.manageData(callbackSuccess, data),\r\n            (error) => this.manageError(callbackFailure, error)\r\n        );\r\n    }\r\n\r\n    private calll(callbackSuccess: Function, callbackFailure: Function, api: string, tableName: string, element?: any){\r\n        if (tableName){\r\n            var url = this.configuration.baseUrl + api + \"/\" + tableName;\r\n            this.callPost(callbackSuccess, callbackFailure, url, element);\r\n        }\r\n    }\r\n\r\n    connect(login: string, password: string){\r\n        this.login = login;\r\n        this.password = password;\r\n    }\r\n\r\n    sql (callbackSuccess: Function, callbackFailure: Function, sql: string, limit = \"5000\"){\r\n        var url = this.configuration.baseUrl + this.configuration.sql;\r\n        var body = {\"__sql\": sql, \"__limit\": limit};\r\n        this.callPost(callbackSuccess, callbackFailure, url, body);\r\n    }\r\n\r\n    read (callbackSuccess: Function, callbackFailure: Function, tableName: string, element: any){\r\n        this.calll(callbackSuccess, callbackFailure, this.configuration.read, tableName, element);\r\n    }\r\n\r\n    insert (callbackSuccess: Function, callbackFailure: Function, tableName: string, element: any){\r\n        this.calll(callbackSuccess, callbackFailure, this.configuration.insert, tableName, element);\r\n    };\r\n\r\n    delete (callbackSuccess: Function, callbackFailure: Function, tableName: string, element: any){\r\n        this.calll(callbackSuccess, callbackFailure, this.configuration.delete, tableName, element);\r\n    };\r\n\r\n    save (callbackSuccess: Function, callbackFailure: Function, tableName: string, element: any){\r\n        this.calll(callbackSuccess, callbackFailure, this.configuration.save, tableName, element);\r\n    };\r\n\r\n    fields (callbackSuccess: Function, callbackFailure: Function, tableName: string){\r\n        this.calll(callbackSuccess, callbackFailure, this.configuration.fields, tableName);\r\n    };\r\n\r\n    private successNeww(data: any, callbackSuccess: Function){\r\n        var fields = data.json.results;\r\n        var newItem: any = {};\r\n        for (var i= 0; i < fields.length; i++){\r\n            newItem[fields[i].Field] = \"\";\r\n        }\r\n        if (callbackSuccess){\r\n            callbackSuccess(newItem)\r\n        }\r\n    }\r\n\r\n    private failureNeww(data: any, callbackFailure: Function){\r\n        if (callbackFailure){\r\n            callbackFailure(data);\r\n        }\r\n    }\r\n\r\n    neww(callbackSuccess: Function, callbackFailure: Function, tableName: string){\r\n        this.fields(\r\n            (data: any) => this.successNeww(data, callbackSuccess),\r\n            (data: any) => this.failureNeww(data, callbackFailure), tableName);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}