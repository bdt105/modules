{"version":3,"file":"translate.component.js","sourceRoot":"","sources":["../../src/translate.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,UAAU,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAE7E,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AAEjE,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAS9D;IAMI,4BAA8C,gBAAkC,EAAmC,OAAyB;QAA9F,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAmC,YAAO,GAAP,OAAO,CAAkB;QAL7H,SAAI,GAAW,EAAE,CAAC;QACjB,UAAK,GAAY,KAAK,CAAC;IAMvC,CAAC;IAED,qCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;YACjC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnE,CAAC;IACL,CAAC;IAED,+CAAkB,GAAlB,UAAmB,OAAe;QAC9B,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IA1Bc;QAAd,KAAK,CAAC,MAAM,CAAC;oDAAmB;IACjB;QAAf,KAAK,CAAC,OAAO,CAAC;qDAAwB;IAF9B,kBAAkB;QAP9B,SAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,CAAC,gBAAgB,CAAC;SAChC,CAAC;QAED,UAAU,EAAE;QAOI,WAAA,MAAM,CAAC,gBAAgB,CAAC,CAAA,EAA8C,WAAA,MAAM,CAAC,gBAAgB,CAAC,CAAA;OANlG,kBAAkB,CA4B9B;IAAD,yBAAC;CAAA,AA5BD,IA4BC;SA5BY,kBAAkB","sourcesContent":["import { Component, Input, OnInit, Injectable, Inject } from '@angular/core';\n\nimport { TranslateService } from 'bdt105angulartranslateservice';\nimport { Toolbox } from 'bdt105toolbox/dist';\nimport { TranslateOptions } from './translateoptions.service';\n\n@Component({\n    selector: 'translate',\n    template: '{{translation}}',\n    providers: [TranslateService]\n})\n\n@Injectable()\nexport class TranslateComponent implements OnInit {\n    @Input('text') text: string = \"\";\n    @Input('isTag') isTag: boolean = false;\n\n    translation: string;\n\n    constructor(@Inject(TranslateService) private translateService: TranslateService, @Inject(TranslateOptions) public options: TranslateOptions) {\n\n    }\n\n    ngOnInit() {\n        if (this.isTag) {\n            if (this.translateService.getTranslateTag()) {\n                this.translation = this.translateService.translate(this.text);\n            } else {\n                this.translation = this.text;\n            }\n        } else {\n            this.translation = this.translateService.translate(this.text);\n        }\n        if (this.options && this.options.baseUrl) {\n            this.translateService.setDatabaseBaseUrl(this.options.baseUrl);\n        }\n    }\n\n    setDatabaseBaseUrl(baseUrl: string) {\n        this.translateService.setDatabaseBaseUrl(baseUrl);\n    }\n}"]}